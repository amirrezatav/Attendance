<UserControl x:Class="Attendance.DeleteClass"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Attendance"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="0 0 0 5"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="FontFamily" Value="/Hunel_Accelerator;component/Files/Fonts/#B Nazanin"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type Expander}" x:Key="ExpanderStyle">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextColor}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <!-- Control template for expander -->
                    <ControlTemplate TargetType="{x:Type Expander}" x:Name="exp">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition x:Name="ContentRow" Height="0"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="border" Grid.Row="0" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="4,4,0,0" >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="tb" FontFamily="Marlett" FontSize="9.75" Background="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Foreground="Black" Grid.Column="1" Content="u" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <ContentPresenter x:Name="HeaderContent" Grid.Column="0" Margin="4" ContentSource="Header" RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                            <Border x:Name="Content" Grid.Row="1" BorderThickness="1,0,1,1" CornerRadius="0,0,4,4" >
                                <ContentPresenter Margin="4" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ContentRow" Property="Height" Value="{Binding Height, ElementName=Content}" />
                                <Setter Property="Content" TargetName="tb" Value="t"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderStyleRed" BasedOn="{StaticResource ExpanderStyle}" TargetType="{x:Type Expander}">
            <Setter Property="Background" Value="#2fff0000"/>
        </Style>
        <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
        <Style x:Key="CustomComboBoxBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" >
                <Setter.Value>
                    <SolidColorBrush Color="Black" Opacity="0.35"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="0 0 0 1"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, ElementName=TextBoxBorder}" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="BorderBrush"  >
                        <Setter.Value>
                            <SolidColorBrush Color="#FF0864AC" Opacity="0.4" />
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, ElementName=ToggleButton}" Value="True">
                    <Setter Property="Background" >
                        <Setter.Value>
                            <SolidColorBrush Color="White" Opacity="0.5" />
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, ElementName=ToggleButton}" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter   Property="BorderBrush" Value="DarkBlue" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ComboBoxToggleButtonStyle"
                 TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border"
                        Grid.ColumnSpan="2"
                        BorderThickness="0"
                        Style="{StaticResource CustomComboBoxBorderStyle}"/>
                <Border x:Name="TextBoxBorder"
                        Grid.ColumnSpan="2"
                        Margin="1" 
                        Style="{StaticResource CustomComboBoxBorderStyle}"/>
                <Path x:Name="Arrow"
                      Grid.Column="1"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Center"
                      Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                      Fill="#444444">
                </Path>
            </Grid>
        </ControlTemplate>
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels"
                    Value="true" />
            <Setter Property="FontFamily"
                    Value="/Attendance;component/Fonts/#IRANSans" />
            <Setter Property="FontSize"
                    Value="14" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Margin"
                    Value="2" />
            <Setter Property="HorizontalContentAlignment" 
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
            <Setter Property="VerticalContentAlignment" 
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">

                        <Border Background="AliceBlue">
                            <Border x:Name="Border"
                                Padding="0"
                                SnapsToDevicePixels="true"
                                Height="{Binding Height, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}">
                                <ContentPresenter 
                                VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ComboBoxItem}}}"
                                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ComboBoxItem}}}"/>
                            </Border>

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" 
                                    Value="true">
                                <Setter Property="Background" TargetName="Border"  >
                                    <Setter.Value>
                                        <SolidColorBrush Color="#4a6fa5" Opacity="0.5"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground"
                                        Value="Black" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" 
                                    Value="true">
                                <Setter Property="Background" TargetName="Border"
                                        Value="{StaticResource Heavy}" />
                                
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                    Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                            Template="{StaticResource ComboBoxToggleButtonStyle}"
                                            Grid.Column="2"
                                            Focusable="false"
                                            ClickMode="Press"
                                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ContentSite"
                                                IsHitTestVisible="False"
                                                Content="{TemplateBinding SelectionBoxItem}"
                                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                Margin="3,3,23,3"
                                                VerticalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}">
                            </ContentPresenter>
                            <TextBox x:Name="PART_EditableTextBox"
                                       Style="{x:Null}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Bottom"
                                       Margin="3,3,23,3"
                                       Focusable="True"
                                       Background="Transparent"
                                       Visibility="Hidden"
                                       IsReadOnly="{TemplateBinding IsReadOnly}" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <Popup x:Name="Popup"
                                     Placement="Bottom"
                                     IsOpen="{TemplateBinding IsDropDownOpen}"
                                     AllowsTransparency="True"
                                     Focusable="False"
                                     PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            BorderThickness="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6"
                                                  SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems"
                                     Value="false">
                                <Setter TargetName="DropDownBorder"
                                        Property="MinHeight"
                                        Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping"
                                     Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                                        Value="false" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
            <RowDefinition Height="70"/>
        </Grid.RowDefinitions>
        <Grid HorizontalAlignment="Center" Grid.Row="1" VerticalAlignment="Center">
            <StackPanel Grid.Column="1" >
                <StackPanel Orientation="Horizontal">
                    <ComboBox FontFamily="#IRANSans Bold" HorizontalContentAlignment="Right" FontSize="15" x:Name="Class0" Margin="2" Width="150"/>
                    <TextBlock Margin="5 5 5 5" Style="{StaticResource InfoData}" FontSize="20" Text="نام کلاس"/>
                </StackPanel>

            </StackPanel>
        </Grid>
        <StackPanel  Grid.Row="2" HorizontalAlignment="Center">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock x:Name="FilePath" Text="" Style="{StaticResource ExplanationItem}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Button x:Name="delete" HorizontalAlignment="Center" Content="حذف" Width="70" Height="30"  Style="{StaticResource ButtonStyle}" Click="delete_Click"/>
            </StackPanel>
        </StackPanel>
    </Grid>

</UserControl>
